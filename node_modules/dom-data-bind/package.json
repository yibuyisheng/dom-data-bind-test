{
  "_args": [
    [
      "yibuyisheng/dom-data-bind",
      "/Users/baidu/dom-data-bind-test"
    ]
  ],
  "_from": "yibuyisheng/dom-data-bind",
  "_id": "dom-data-bind@1.0.0-alpha.2",
  "_inCache": true,
  "_location": "/dom-data-bind",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/yibuyisheng/dom-data-bind/master/package.json",
      "gitUrl": "git://github.com/yibuyisheng/dom-data-bind.git",
      "httpsUrl": "git+https://github.com/yibuyisheng/dom-data-bind.git",
      "shortcut": "github:yibuyisheng/dom-data-bind",
      "ssh": "git@github.com:yibuyisheng/dom-data-bind.git",
      "sshUrl": "git+ssh://git@github.com/yibuyisheng/dom-data-bind.git",
      "type": "github"
    },
    "name": null,
    "raw": "yibuyisheng/dom-data-bind",
    "rawSpec": "yibuyisheng/dom-data-bind",
    "scope": null,
    "spec": "github:yibuyisheng/dom-data-bind",
    "type": "hosted"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/yibuyisheng/dom-data-bind.git#7bfb74b8c1a84dc38cf40cb789f4bb6aea8fbcb5",
  "_shasum": "1a7503548cbd003936ab6fd618354e493973359f",
  "_shrinkwrap": null,
  "_spec": "yibuyisheng/dom-data-bind",
  "_where": "/Users/baidu/dom-data-bind-test",
  "author": "",
  "bugs": {
    "url": "https://github.com/yibuyisheng/dom-data-bind/issues"
  },
  "dependencies": {},
  "description": "This is a template library. Unlike those traditional templates (such as [Jade](http://jade-lang.com/)), It is based on DOM.",
  "devDependencies": {
    "gulp": "^3.9.0",
    "gulp-browserify": "^0.5.1",
    "gulp-util": "^3.0.6",
    "through2": "^2.0.0"
  },
  "directories": {
    "test": "test"
  },
  "edp": {
    "depDir": "dep",
    "loaderAutoConfig": "js,htm,html,tpl,vm,phtml",
    "loaderUrl": "http://s1.bdstatic.com/r/www/cache/ecom/esl/1-8-2/esl.js",
    "srcDir": "dist",
    "wwwroot": "/"
  },
  "gitHead": "7bfb74b8c1a84dc38cf40cb789f4bb6aea8fbcb5",
  "homepage": "https://github.com/yibuyisheng/dom-data-bind#readme",
  "installable": true,
  "license": "ISC",
  "main": "main.js",
  "name": "dom-data-bind",
  "optionalDependencies": {},
  "readme": "## What's this?\n\nThis is a template library. Unlike those traditional templates (such as [Jade](http://jade-lang.com/)), It is based on DOM.\n\n## Sample codes\n\n* Use basic expressions:\n\n    ```html\n    <p id=\"startNode\" class=\"${klass}\">${name}</p>\n    <p id=\"endNode\">${3-1}</p>\n    <script src=\"./dist/index.js\"></script>\n    <script>\n    var tree = new Tree({\n        startNode: document.getElementById('startNode'),\n        endNode: document.getElementById('endNode'),\n        config: new Config()\n    });\n    tree.traverse();\n    tree.setData({\n        name: 'Amy',\n        klass: 'show'\n    });\n    </script>\n    ```\n\n    Following is the output DOM structure:\n\n    ```html\n    <p id=\"startNode\" class=\"show\">Amy</p>\n    <p id=\"endNode\">2</p>\n    ```\n\n* Use `if directive`:\n\n    ```html\n    <p id=\"node\">\n    <!-- if: ${age} < 10 -->\n    show some contents for children.\n    <!-- elif: ${age} > 18 -->\n    show some contents for adults.\n    <!-- else -->\n    nothing to show\n    <!-- /if -->\n    </p>\n    <script src=\"./dist/index.js\"></script>\n    <script>\n    var node = document.getElementById('node');\n    var tree = new Tree({\n        startNode: node,\n        endNode: node,\n        config: new Config()\n    });\n    tree.traverse();\n    tree.setData({\n        age: 20\n    });\n    </script>\n    ```\n\n    Then the output is:\n\n    ```html\n    <p id=\"node\">\n     <!-- if: ${age} < 10 -->\n    <!-- elif: ${age} > 18 -->\n    show some contents for adults.\n    <!-- else -->\n    <!-- /if -->\n    </p>\n    ```\n\n* Use `for directive`:\n\n    ```html\n    <p id=\"node\">\n    <!-- for: ${students} as ${student} -->\n        ${student.name}&nbsp;\n    <!-- /for -->\n    </p>\n    <script src=\"./dist/index.js\"></script>\n    <script>\n    var node = document.getElementById('node');\n    var tree = new Tree({\n        startNode: node,\n        endNode: node,\n        config: new Config()\n    });\n    tree.traverse();\n    tree.setData({\n        students: [\n            {\n                name: 'Amy'\n            },\n            {\n                name: 'Jack'\n            }\n        ]\n    });\n    </script>\n    ```\n\n    The output:\n\n    ```html\n    <p id=\"node\">\n    Amy Jack\n    </p>\n    ```\n\n* Use `event`:\n\n    ```html\n    <button id=\"node\" event-click=\"${onClick(event)}\">click me</button>\n    <script src=\"./dist/index.js\"></script>\n    <script>\n    var node = document.getElementById('node');\n    var tree = new Tree({\n        startNode: node,\n        endNode: node,\n        config: new Config()\n    });\n    tree.traverse();\n    tree.setData({\n        onClick: function (event) {\n            console.log('clicked');\n        }\n    });\n    </script>\n    ```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yibuyisheng/dom-data-bind.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "watch": "gulp watch"
  },
  "version": "1.0.0-alpha.2"
}
